package com.example.demo.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.example.demo.dtos.ChangePasswordDto;

import com.example.demo.dtos.LoginDto;
import com.example.demo.dtos.OtpDto;
import com.example.demo.service.MailService;
import com.example.demo.service.UserService;

import jakarta.servlet.http.HttpSession;

@RestController
@RequestMapping("/server")
public class UserController {

	@Autowired
	private  UserService userService;
	
	@Autowired
	private MailService mailService;
	
	@PostMapping("/create")
	public ResponseEntity<String> accountCreation(@RequestBody com.example.demo.dtos.AccountCreateDTO body) {
		
		return ResponseEntity.ok(userService.createAccount(body));
	}
	
	@PostMapping("/login")
	public ResponseEntity<String> loginAccount(@RequestBody LoginDto body,HttpSession session) {
		
		return ResponseEntity.ok(userService.loginUser(body, session));
	}
	@GetMapping("/logout")
	public ResponseEntity<Void> logoutAccount(HttpSession session){
		session.invalidate();
		return ResponseEntity.ok().build();
	}
	@PostMapping("/otprequest")
	public ResponseEntity<String> otpRequest(@RequestBody OtpDto body) {
		
		return ResponseEntity.ok(mailService.sendOtp(body));
	}
	
	@PostMapping("/validateotp")
	public ResponseEntity<?> otpValidate(@RequestBody OtpDto body) {
		
		return ResponseEntity.ok(mailService.verifyOtp(body));
	}
	
	@PutMapping("/changepassword")
	public ResponseEntity<String> changePassword(@RequestBody ChangePasswordDto body) {
		
		return ResponseEntity.ok(userService.changePassword(body));
	}
	
	@GetMapping("/getUserDetails")
	public ResponseEntity<?> getUserDetails(HttpSession session){
		
		return ResponseEntity.ok(null);
	}
	
}